package notificationsapp

import (
	"log"
	"net/http"
	"path"
)

func mockHandler(w http.ResponseWriter, req *http.Request) {
	if err := loadTemplates(); err != nil {
		log.Println("loadTemplates:", err)
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}

	tmpl := path.Base(req.URL.Path)
	baseState, err := baseState(req)
	if err != nil {
		log.Println("baseState:", err)
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}
	mock := mockState{
		state: state{
			BaseState: baseState,
		},
	}
	err = t.ExecuteTemplate(w, tmpl+".tmpl", &mock)
	if err != nil {
		log.Println("t.ExecuteTemplate:", err)
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}
}

type mockState struct {
	state
}

var _ = `
ns = ([]github.Notification)([]github.Notification{
	(github.Notification)(github.Notification{
		ID: (*string)(&"111741022"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&10151943),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"go-gl"),
				ID:                (*int)(&2505184),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/2505184?v=3"),
				HTMLURL:           (*string)(&"https://github.com/go-gl"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"Organization"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/go-gl"),
				EventsURL:         (*string)(&"https://api.github.com/users/go-gl/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/go-gl/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/go-gl/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/go-gl/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/go-gl/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/go-gl/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/go-gl/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/go-gl/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/go-gl/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"glfw"),
			FullName:         (*string)(&"go-gl/glfw"),
			Description:      (*string)(&"Go bindings for GLFW 3"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/go-gl/glfw"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/go-gl/glfw"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/go-gl/glfw/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/go-gl/glfw/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/go-gl/glfw/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/go-gl/glfw/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/go-gl/glfw/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/go-gl/glfw/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/go-gl/glfw/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/go-gl/glfw/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/go-gl/glfw/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/go-gl/glfw/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/go-gl/glfw/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/go-gl/glfw/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/go-gl/glfw/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/go-gl/glfw/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/go-gl/glfw/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/go-gl/glfw/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/go-gl/glfw/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/go-gl/glfw/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/go-gl/glfw/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/go-gl/glfw/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/go-gl/glfw/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/go-gl/glfw/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/go-gl/glfw/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/go-gl/glfw/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/go-gl/glfw/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/go-gl/glfw/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/go-gl/glfw/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/go-gl/glfw/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/go-gl/glfw/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"Are there plans for 64-bit support"),
			URL:              (*string)(&"https://api.github.com/repos/go-gl/glfw/issues/152"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/go-gl/glfw/issues/comments/160223641"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"comment"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584261191),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584259640),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		URL: (*string)(&"https://api.github.com/notifications/threads/111741022"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"110984200"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&4925652),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"robfig"),
				ID:                (*int)(&536325),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/536325?v=3"),
				HTMLURL:           (*string)(&"https://github.com/robfig"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"User"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/robfig"),
				EventsURL:         (*string)(&"https://api.github.com/users/robfig/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/robfig/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/robfig/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/robfig/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/robfig/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/robfig/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/robfig/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/robfig/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/robfig/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"cron"),
			FullName:         (*string)(&"robfig/cron"),
			Description:      (*string)(&"a cron library for go"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/robfig/cron"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/robfig/cron"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/robfig/cron/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/robfig/cron/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/robfig/cron/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/robfig/cron/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/robfig/cron/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/robfig/cron/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/robfig/cron/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/robfig/cron/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/robfig/cron/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/robfig/cron/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/robfig/cron/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/robfig/cron/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/robfig/cron/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/robfig/cron/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/robfig/cron/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/robfig/cron/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/robfig/cron/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/robfig/cron/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/robfig/cron/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/robfig/cron/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/robfig/cron/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/robfig/cron/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/robfig/cron/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/robfig/cron/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/robfig/cron/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/robfig/cron/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/robfig/cron/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/robfig/cron/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/robfig/cron/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/robfig/cron/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/robfig/cron/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/robfig/cron/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/robfig/cron/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/robfig/cron/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/robfig/cron/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"A small bug when using c.AddFunc after c.Start"),
			URL:              (*string)(&"https://api.github.com/repos/robfig/cron/issues/34"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/robfig/cron/issues/comments/160190290"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584247630),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(&time.Time{
			sec:  (int64)(63583955938),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		URL: (*string)(&"https://api.github.com/notifications/threads/110984200"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"111830421"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&21540759),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"avelino"),
				ID:                (*int)(&31996),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/31996?v=3"),
				HTMLURL:           (*string)(&"https://github.com/avelino"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"User"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/avelino"),
				EventsURL:         (*string)(&"https://api.github.com/users/avelino/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/avelino/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/avelino/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/avelino/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/avelino/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/avelino/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/avelino/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/avelino/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/avelino/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"awesome-go"),
			FullName:         (*string)(&"avelino/awesome-go"),
			Description:      (*string)(&"A curated list of awesome Go frameworks, libraries and software"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/avelino/awesome-go"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/avelino/awesome-go"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/avelino/awesome-go/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/avelino/awesome-go/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/avelino/awesome-go/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/avelino/awesome-go/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/avelino/awesome-go/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/avelino/awesome-go/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/avelino/awesome-go/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/avelino/awesome-go/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/avelino/awesome-go/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/avelino/awesome-go/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/avelino/awesome-go/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/avelino/awesome-go/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/avelino/awesome-go/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/avelino/awesome-go/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/avelino/awesome-go/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/avelino/awesome-go/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/avelino/awesome-go/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/avelino/awesome-go/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/avelino/awesome-go/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/avelino/awesome-go/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/avelino/awesome-go/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/avelino/awesome-go/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/avelino/awesome-go/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/avelino/awesome-go/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/avelino/awesome-go/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/avelino/awesome-go/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/avelino/awesome-go/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/avelino/awesome-go/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/avelino/awesome-go/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/avelino/awesome-go/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/avelino/awesome-go/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/avelino/awesome-go/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/avelino/awesome-go/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/avelino/awesome-go/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/avelino/awesome-go/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"Add rkt - An App Container runtime"),
			URL:              (*string)(&"https://api.github.com/repos/avelino/awesome-go/pulls/692"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/avelino/awesome-go/pulls/692"),
			Type:             (*string)(&"PullRequest"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584238918),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/111830421"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"111799579"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&6808505),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"pavben"),
				ID:                (*int)(&2124408),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/2124408?v=3"),
				HTMLURL:           (*string)(&"https://github.com/pavben"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"User"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/pavben"),
				EventsURL:         (*string)(&"https://api.github.com/users/pavben/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/pavben/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/pavben/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/pavben/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/pavben/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/pavben/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/pavben/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/pavben/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/pavben/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"WebIRC"),
			FullName:         (*string)(&"pavben/WebIRC"),
			Description:      (*string)(&"Server-based IRC client web app"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/pavben/WebIRC"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/pavben/WebIRC"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/pavben/WebIRC/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/pavben/WebIRC/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/pavben/WebIRC/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/pavben/WebIRC/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/pavben/WebIRC/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/pavben/WebIRC/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/pavben/WebIRC/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/pavben/WebIRC/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/pavben/WebIRC/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/pavben/WebIRC/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/pavben/WebIRC/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/pavben/WebIRC/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/pavben/WebIRC/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/pavben/WebIRC/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/pavben/WebIRC/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/pavben/WebIRC/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/pavben/WebIRC/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/pavben/WebIRC/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/pavben/WebIRC/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/pavben/WebIRC/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/pavben/WebIRC/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/pavben/WebIRC/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/pavben/WebIRC/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/pavben/WebIRC/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/pavben/WebIRC/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/pavben/WebIRC/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/pavben/WebIRC/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/pavben/WebIRC/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/pavben/WebIRC/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/pavben/WebIRC/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/pavben/WebIRC/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/pavben/WebIRC/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/pavben/WebIRC/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/pavben/WebIRC/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/pavben/WebIRC/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"npm start fails"),
			URL:              (*string)(&"https://api.github.com/repos/pavben/WebIRC/issues/28"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/pavben/WebIRC/issues/28"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584236835),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/111799579"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"36845669"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&13130758),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"sourcegraph"),
				ID:                (*int)(&3979584),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/3979584?v=3"),
				HTMLURL:           (*string)(&"https://github.com/sourcegraph"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"Organization"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/sourcegraph"),
				EventsURL:         (*string)(&"https://api.github.com/users/sourcegraph/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/sourcegraph/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/sourcegraph/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/sourcegraph/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/sourcegraph/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/sourcegraph/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/sourcegraph/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/sourcegraph/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/sourcegraph/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"sourcegraph.com"),
			FullName:         (*string)(&"sourcegraph/sourcegraph.com"),
			Description:      (*string)(&"Public issue tracker for https://sourcegraph.com"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/sourcegraph/sourcegraph.com"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"PHP support"),
			URL:              (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/issues/185"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/sourcegraph/sourcegraph.com/issues/comments/160165125"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584236348),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/36845669"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"93600606"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&14997015),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"akavel"),
				ID:                (*int)(&273837),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/273837?v=3"),
				HTMLURL:           (*string)(&"https://github.com/akavel"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"User"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/akavel"),
				EventsURL:         (*string)(&"https://api.github.com/users/akavel/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/akavel/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/akavel/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/akavel/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/akavel/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/akavel/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/akavel/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/akavel/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/akavel/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"rsrc"),
			FullName:         (*string)(&"akavel/rsrc"),
			Description:      (*string)(&"Tool for embedding binary resources in Go programs."),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/akavel/rsrc"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/akavel/rsrc"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/akavel/rsrc/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/akavel/rsrc/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/akavel/rsrc/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/akavel/rsrc/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/akavel/rsrc/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/akavel/rsrc/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/akavel/rsrc/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/akavel/rsrc/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/akavel/rsrc/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/akavel/rsrc/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/akavel/rsrc/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/akavel/rsrc/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/akavel/rsrc/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/akavel/rsrc/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/akavel/rsrc/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/akavel/rsrc/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/akavel/rsrc/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/akavel/rsrc/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/akavel/rsrc/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/akavel/rsrc/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/akavel/rsrc/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/akavel/rsrc/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/akavel/rsrc/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/akavel/rsrc/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/akavel/rsrc/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/akavel/rsrc/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/akavel/rsrc/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/akavel/rsrc/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/akavel/rsrc/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/akavel/rsrc/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/akavel/rsrc/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/akavel/rsrc/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/akavel/rsrc/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/akavel/rsrc/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/akavel/rsrc/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"64 bit issue"),
			URL:              (*string)(&"https://api.github.com/repos/akavel/rsrc/issues/11"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/akavel/rsrc/issues/11"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584232008),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/93600606"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"111596192"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&33352201),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"gengo"),
				ID:                (*int)(&1681251),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/1681251?v=3"),
				HTMLURL:           (*string)(&"https://github.com/gengo"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"Organization"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/gengo"),
				EventsURL:         (*string)(&"https://api.github.com/users/gengo/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/gengo/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/gengo/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/gengo/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/gengo/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/gengo/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/gengo/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/gengo/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/gengo/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"grpc-gateway"),
			FullName:         (*string)(&"gengo/grpc-gateway"),
			Description:      (*string)(&"gRPC to JSON proxy generator"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/gengo/grpc-gateway"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/gengo/grpc-gateway"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"gRPC gateway Bazel build rules"),
			URL:              (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/issues/66"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/gengo/grpc-gateway/issues/comments/160086171"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584212773),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/111596192"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"111761431"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&46135520),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"gmlewis"),
				ID:                (*int)(&6598971),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/6598971?v=3"),
				HTMLURL:           (*string)(&"https://github.com/gmlewis"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"User"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/gmlewis"),
				EventsURL:         (*string)(&"https://api.github.com/users/gmlewis/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/gmlewis/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/gmlewis/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/gmlewis/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/gmlewis/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/gmlewis/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/gmlewis/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/gmlewis/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/gmlewis/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"go-frp"),
			FullName:         (*string)(&"gmlewis/go-frp"),
			Description:      (*string)(&"Functional Reactive Programming in Go"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/gmlewis/go-frp"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/gmlewis/go-frp"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/gmlewis/go-frp/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/gmlewis/go-frp/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/gmlewis/go-frp/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/gmlewis/go-frp/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/gmlewis/go-frp/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/gmlewis/go-frp/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/gmlewis/go-frp/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/gmlewis/go-frp/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/gmlewis/go-frp/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/gmlewis/go-frp/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/gmlewis/go-frp/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/gmlewis/go-frp/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/gmlewis/go-frp/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/gmlewis/go-frp/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/gmlewis/go-frp/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/gmlewis/go-frp/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/gmlewis/go-frp/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/gmlewis/go-frp/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/gmlewis/go-frp/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/gmlewis/go-frp/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/gmlewis/go-frp/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/gmlewis/go-frp/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/gmlewis/go-frp/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/gmlewis/go-frp/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/gmlewis/go-frp/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/gmlewis/go-frp/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/gmlewis/go-frp/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/gmlewis/go-frp/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/gmlewis/go-frp/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/gmlewis/go-frp/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/gmlewis/go-frp/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/gmlewis/go-frp/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/gmlewis/go-frp/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/gmlewis/go-frp/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/gmlewis/go-frp/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"go-frp: prevent XSS and update label and reverse examples"),
			URL:              (*string)(&"https://api.github.com/repos/gmlewis/go-frp/pulls/8"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/gmlewis/go-frp/pulls/8"),
			Type:             (*string)(&"PullRequest"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584208765),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/111761431"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"111740950"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&35805166),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"goxjs"),
				ID:                (*int)(&12488512),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/12488512?v=3"),
				HTMLURL:           (*string)(&"https://github.com/goxjs"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"Organization"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/goxjs"),
				EventsURL:         (*string)(&"https://api.github.com/users/goxjs/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/goxjs/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/goxjs/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/goxjs/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/goxjs/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/goxjs/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/goxjs/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/goxjs/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/goxjs/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"gl"),
			FullName:         (*string)(&"goxjs/gl"),
			Description:      (*string)(&"Go cross-platform OpenGL bindings."),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/goxjs/gl"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/goxjs/gl"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/goxjs/gl/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/goxjs/gl/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/goxjs/gl/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/goxjs/gl/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/goxjs/gl/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/goxjs/gl/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/goxjs/gl/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/goxjs/gl/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/goxjs/gl/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/goxjs/gl/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/goxjs/gl/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/goxjs/gl/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/goxjs/gl/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/goxjs/gl/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/goxjs/gl/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/goxjs/gl/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/goxjs/gl/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/goxjs/gl/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/goxjs/gl/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/goxjs/gl/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/goxjs/gl/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/goxjs/gl/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/goxjs/gl/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/goxjs/gl/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/goxjs/gl/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/goxjs/gl/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/goxjs/gl/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/goxjs/gl/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/goxjs/gl/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/goxjs/gl/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/goxjs/gl/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/goxjs/gl/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/goxjs/gl/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/goxjs/gl/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/goxjs/gl/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"implement all remained \"panic\" methods"),
			URL:              (*string)(&"https://api.github.com/repos/goxjs/gl/pulls/15"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/goxjs/gl/pulls/15"),
			Type:             (*string)(&"PullRequest"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584191493),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/111740950"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"111291441"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&42127475),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"sourcegraph"),
				ID:                (*int)(&3979584),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/3979584?v=3"),
				HTMLURL:           (*string)(&"https://github.com/sourcegraph"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"Organization"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/sourcegraph"),
				EventsURL:         (*string)(&"https://api.github.com/users/sourcegraph/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/sourcegraph/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/sourcegraph/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/sourcegraph/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/sourcegraph/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/sourcegraph/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/sourcegraph/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/sourcegraph/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/sourcegraph/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"grpccache"),
			FullName:         (*string)(&"sourcegraph/grpccache"),
			Description:      (*string)(&"(WIP) grpccache provides caching for gRPC calls with HTTP-like semantics."),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/sourcegraph/grpccache"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&true),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/sourcegraph/grpccache"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"Fix data race involving multiple calls to SetCacheControl"),
			URL:              (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/pulls/3"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/sourcegraph/grpccache/issues/comments/159867191"),
			Type:             (*string)(&"PullRequest"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584129485),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/111291441"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"110640686"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&42036718),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"golang"),
				ID:                (*int)(&4314092),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/4314092?v=3"),
				HTMLURL:           (*string)(&"https://github.com/golang"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"Organization"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/golang"),
				EventsURL:         (*string)(&"https://api.github.com/users/golang/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/golang/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/golang/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/golang/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/golang/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/golang/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/golang/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/golang/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/golang/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"sublime-build"),
			FullName:         (*string)(&"golang/sublime-build"),
			Description:      (*string)(&"The official Sublime Text package for Go build system integration."),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/golang/sublime-build"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/golang/sublime-build"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/golang/sublime-build/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/golang/sublime-build/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/golang/sublime-build/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/golang/sublime-build/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/golang/sublime-build/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/golang/sublime-build/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/golang/sublime-build/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/golang/sublime-build/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/golang/sublime-build/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/golang/sublime-build/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/golang/sublime-build/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/golang/sublime-build/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/golang/sublime-build/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"Cross compile error"),
			URL:              (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/17"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/17"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584095710),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(&time.Time{
			sec:  (int64)(63583856361),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		URL: (*string)(&"https://api.github.com/notifications/threads/110640686"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"111579959"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&42036718),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"golang"),
				ID:                (*int)(&4314092),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/4314092?v=3"),
				HTMLURL:           (*string)(&"https://github.com/golang"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"Organization"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/golang"),
				EventsURL:         (*string)(&"https://api.github.com/users/golang/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/golang/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/golang/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/golang/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/golang/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/golang/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/golang/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/golang/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/golang/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"sublime-build"),
			FullName:         (*string)(&"golang/sublime-build"),
			Description:      (*string)(&"The official Sublime Text package for Go build system integration."),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/golang/sublime-build"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/golang/sublime-build"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/golang/sublime-build/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/golang/sublime-build/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/golang/sublime-build/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/golang/sublime-build/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/golang/sublime-build/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/golang/sublime-build/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/golang/sublime-build/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/golang/sublime-build/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/golang/sublime-build/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/golang/sublime-build/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/golang/sublime-build/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/golang/sublime-build/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/golang/sublime-build/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"sublime process freezing"),
			URL:              (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/18"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/18"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584095547),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/111579959"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"108898083"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&42036718),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"golang"),
				ID:                (*int)(&4314092),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/4314092?v=3"),
				HTMLURL:           (*string)(&"https://github.com/golang"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"Organization"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/golang"),
				EventsURL:         (*string)(&"https://api.github.com/users/golang/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/golang/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/golang/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/golang/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/golang/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/golang/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/golang/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/golang/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/golang/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"sublime-build"),
			FullName:         (*string)(&"golang/sublime-build"),
			Description:      (*string)(&"The official Sublime Text package for Go build system integration."),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/golang/sublime-build"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/golang/sublime-build"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/golang/sublime-build/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/golang/sublime-build/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/golang/sublime-build/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/golang/sublime-build/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/golang/sublime-build/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/golang/sublime-build/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/golang/sublime-build/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/golang/sublime-build/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/golang/sublime-build/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/golang/sublime-build/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/golang/sublime-build/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/golang/sublime-build/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/golang/sublime-build/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/golang/sublime-build/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/golang/sublime-build/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/golang/sublime-build/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/golang/sublime-build/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"Recommended way to run Benchmarks"),
			URL:              (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/13"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/golang/sublime-build/issues/comments/159628100"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63584059461),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/108898083"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"111206953"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&39438126),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"renstrom"),
				ID:                (*int)(&177685),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/177685?v=3"),
				HTMLURL:           (*string)(&"https://github.com/renstrom"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"User"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/renstrom"),
				EventsURL:         (*string)(&"https://api.github.com/users/renstrom/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/renstrom/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/renstrom/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/renstrom/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/renstrom/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/renstrom/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/renstrom/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/renstrom/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/renstrom/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"fuzzysearch"),
			FullName:         (*string)(&"renstrom/fuzzysearch"),
			Description:      (*string)(&":pig: Tiny and fast fuzzy search in Go"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/renstrom/fuzzysearch"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"Introduce gopkg support"),
			URL:              (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/issues/11"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/issues/comments/159383423"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63583990761),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/111206953"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"111119812"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&9524997),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"glfw"),
				ID:                (*int)(&3905364),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/3905364?v=3"),
				HTMLURL:           (*string)(&"https://github.com/glfw"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"Organization"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/glfw"),
				EventsURL:         (*string)(&"https://api.github.com/users/glfw/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/glfw/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/glfw/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/glfw/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/glfw/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/glfw/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/glfw/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/glfw/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/glfw/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"glfw"),
			FullName:         (*string)(&"glfw/glfw"),
			Description:      (*string)(&"A multi-platform library for OpenGL, window and input"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/glfw/glfw"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/glfw/glfw"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/glfw/glfw/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/glfw/glfw/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/glfw/glfw/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/glfw/glfw/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/glfw/glfw/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/glfw/glfw/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/glfw/glfw/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/glfw/glfw/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/glfw/glfw/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/glfw/glfw/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/glfw/glfw/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/glfw/glfw/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/glfw/glfw/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/glfw/glfw/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/glfw/glfw/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/glfw/glfw/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/glfw/glfw/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/glfw/glfw/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/glfw/glfw/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/glfw/glfw/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/glfw/glfw/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/glfw/glfw/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/glfw/glfw/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/glfw/glfw/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/glfw/glfw/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/glfw/glfw/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/glfw/glfw/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/glfw/glfw/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/glfw/glfw/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"Fullscreen or disabling GLFW_DECORATED leads to major perf drop under Windows"),
			URL:              (*string)(&"https://api.github.com/repos/glfw/glfw/issues/649"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/glfw/glfw/issues/comments/159357102"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63583984850),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/111119812"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"94133384"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&39438126),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"renstrom"),
				ID:                (*int)(&177685),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/177685?v=3"),
				HTMLURL:           (*string)(&"https://github.com/renstrom"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"User"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/renstrom"),
				EventsURL:         (*string)(&"https://api.github.com/users/renstrom/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/renstrom/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/renstrom/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/renstrom/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/renstrom/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/renstrom/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/renstrom/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/renstrom/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/renstrom/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"fuzzysearch"),
			FullName:         (*string)(&"renstrom/fuzzysearch"),
			Description:      (*string)(&":pig: Tiny and fast fuzzy search in Go"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/renstrom/fuzzysearch"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"Case insensetivity"),
			URL:              (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/issues/8"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/renstrom/fuzzysearch/issues/8"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63583962755),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(nil),
		URL:        (*string)(&"https://api.github.com/notifications/threads/94133384"),
	}),
	(github.Notification)(github.Notification{
		ID: (*string)(&"58373510"),
		Repository: (*github.Repository)(&github.Repository{
			ID: (*int)(&9524997),
			Owner: (*github.User)(&github.User{
				Login:             (*string)(&"glfw"),
				ID:                (*int)(&3905364),
				AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/3905364?v=3"),
				HTMLURL:           (*string)(&"https://github.com/glfw"),
				GravatarID:        (*string)(&""),
				Name:              (*string)(nil),
				Company:           (*string)(nil),
				Blog:              (*string)(nil),
				Location:          (*string)(nil),
				Email:             (*string)(nil),
				Hireable:          (*bool)(nil),
				Bio:               (*string)(nil),
				PublicRepos:       (*int)(nil),
				PublicGists:       (*int)(nil),
				Followers:         (*int)(nil),
				Following:         (*int)(nil),
				CreatedAt:         (*github.Timestamp)(nil),
				UpdatedAt:         (*github.Timestamp)(nil),
				Type:              (*string)(&"Organization"),
				SiteAdmin:         (*bool)(&false),
				TotalPrivateRepos: (*int)(nil),
				OwnedPrivateRepos: (*int)(nil),
				PrivateGists:      (*int)(nil),
				DiskUsage:         (*int)(nil),
				Collaborators:     (*int)(nil),
				Plan:              (*github.Plan)(nil),
				URL:               (*string)(&"https://api.github.com/users/glfw"),
				EventsURL:         (*string)(&"https://api.github.com/users/glfw/events{/privacy}"),
				FollowingURL:      (*string)(&"https://api.github.com/users/glfw/following{/other_user}"),
				FollowersURL:      (*string)(&"https://api.github.com/users/glfw/followers"),
				GistsURL:          (*string)(&"https://api.github.com/users/glfw/gists{/gist_id}"),
				OrganizationsURL:  (*string)(&"https://api.github.com/users/glfw/orgs"),
				ReceivedEventsURL: (*string)(&"https://api.github.com/users/glfw/received_events"),
				ReposURL:          (*string)(&"https://api.github.com/users/glfw/repos"),
				StarredURL:        (*string)(&"https://api.github.com/users/glfw/starred{/owner}{/repo}"),
				SubscriptionsURL:  (*string)(&"https://api.github.com/users/glfw/subscriptions"),
				TextMatches:       ([]github.TextMatch)(nil),
				Permissions:       (*map[string]bool)(nil),
			}),
			Name:             (*string)(&"glfw"),
			FullName:         (*string)(&"glfw/glfw"),
			Description:      (*string)(&"A multi-platform library for OpenGL, window and input"),
			Homepage:         (*string)(nil),
			DefaultBranch:    (*string)(nil),
			MasterBranch:     (*string)(nil),
			CreatedAt:        (*github.Timestamp)(nil),
			PushedAt:         (*github.Timestamp)(nil),
			UpdatedAt:        (*github.Timestamp)(nil),
			HTMLURL:          (*string)(&"https://github.com/glfw/glfw"),
			CloneURL:         (*string)(nil),
			GitURL:           (*string)(nil),
			MirrorURL:        (*string)(nil),
			SSHURL:           (*string)(nil),
			SVNURL:           (*string)(nil),
			Language:         (*string)(nil),
			Fork:             (*bool)(&false),
			ForksCount:       (*int)(nil),
			NetworkCount:     (*int)(nil),
			OpenIssuesCount:  (*int)(nil),
			StargazersCount:  (*int)(nil),
			SubscribersCount: (*int)(nil),
			WatchersCount:    (*int)(nil),
			Size:             (*int)(nil),
			AutoInit:         (*bool)(nil),
			Parent:           (*github.Repository)(nil),
			Source:           (*github.Repository)(nil),
			Organization:     (*github.Organization)(nil),
			Permissions:      (*map[string]bool)(nil),
			License:          (*github.License)(nil),
			Private:          (*bool)(&false),
			HasIssues:        (*bool)(nil),
			HasWiki:          (*bool)(nil),
			HasDownloads:     (*bool)(nil),
			TeamID:           (*int)(nil),
			URL:              (*string)(&"https://api.github.com/repos/glfw/glfw"),
			ArchiveURL:       (*string)(&"https://api.github.com/repos/glfw/glfw/{archive_format}{/ref}"),
			AssigneesURL:     (*string)(&"https://api.github.com/repos/glfw/glfw/assignees{/user}"),
			BlobsURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/git/blobs{/sha}"),
			BranchesURL:      (*string)(&"https://api.github.com/repos/glfw/glfw/branches{/branch}"),
			CollaboratorsURL: (*string)(&"https://api.github.com/repos/glfw/glfw/collaborators{/collaborator}"),
			CommentsURL:      (*string)(&"https://api.github.com/repos/glfw/glfw/comments{/number}"),
			CommitsURL:       (*string)(&"https://api.github.com/repos/glfw/glfw/commits{/sha}"),
			CompareURL:       (*string)(&"https://api.github.com/repos/glfw/glfw/compare/{base}...{head}"),
			ContentsURL:      (*string)(&"https://api.github.com/repos/glfw/glfw/contents/{+path}"),
			ContributorsURL:  (*string)(&"https://api.github.com/repos/glfw/glfw/contributors"),
			DownloadsURL:     (*string)(&"https://api.github.com/repos/glfw/glfw/downloads"),
			EventsURL:        (*string)(&"https://api.github.com/repos/glfw/glfw/events"),
			ForksURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/forks"),
			GitCommitsURL:    (*string)(&"https://api.github.com/repos/glfw/glfw/git/commits{/sha}"),
			GitRefsURL:       (*string)(&"https://api.github.com/repos/glfw/glfw/git/refs{/sha}"),
			GitTagsURL:       (*string)(&"https://api.github.com/repos/glfw/glfw/git/tags{/sha}"),
			HooksURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/hooks"),
			IssueCommentURL:  (*string)(&"https://api.github.com/repos/glfw/glfw/issues/comments{/number}"),
			IssueEventsURL:   (*string)(&"https://api.github.com/repos/glfw/glfw/issues/events{/number}"),
			IssuesURL:        (*string)(&"https://api.github.com/repos/glfw/glfw/issues{/number}"),
			KeysURL:          (*string)(&"https://api.github.com/repos/glfw/glfw/keys{/key_id}"),
			LabelsURL:        (*string)(&"https://api.github.com/repos/glfw/glfw/labels{/name}"),
			LanguagesURL:     (*string)(&"https://api.github.com/repos/glfw/glfw/languages"),
			MergesURL:        (*string)(&"https://api.github.com/repos/glfw/glfw/merges"),
			MilestonesURL:    (*string)(&"https://api.github.com/repos/glfw/glfw/milestones{/number}"),
			NotificationsURL: (*string)(&"https://api.github.com/repos/glfw/glfw/notifications{?since,all,participating}"),
			PullsURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/pulls{/number}"),
			ReleasesURL:      (*string)(&"https://api.github.com/repos/glfw/glfw/releases{/id}"),
			StargazersURL:    (*string)(&"https://api.github.com/repos/glfw/glfw/stargazers"),
			StatusesURL:      (*string)(&"https://api.github.com/repos/glfw/glfw/statuses/{sha}"),
			SubscribersURL:   (*string)(&"https://api.github.com/repos/glfw/glfw/subscribers"),
			SubscriptionURL:  (*string)(&"https://api.github.com/repos/glfw/glfw/subscription"),
			TagsURL:          (*string)(&"https://api.github.com/repos/glfw/glfw/tags"),
			TreesURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/git/trees{/sha}"),
			TeamsURL:         (*string)(&"https://api.github.com/repos/glfw/glfw/teams"),
			TextMatches:      ([]github.TextMatch)(nil),
		}),
		Subject: (*github.NotificationSubject)(&github.NotificationSubject{
			Title:            (*string)(&"No monitors found on Windows XP guest on VMware"),
			URL:              (*string)(&"https://api.github.com/repos/glfw/glfw/issues/441"),
			LatestCommentURL: (*string)(&"https://api.github.com/repos/glfw/glfw/issues/comments/158912723"),
			Type:             (*string)(&"Issue"),
		}),
		Reason: (*string)(&"subscribed"),
		Unread: (*bool)(&true),
		UpdatedAt: (*time.Time)(&time.Time{
			sec:  (int64)(63583875990),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		LastReadAt: (*time.Time)(&time.Time{
			sec:  (int64)(63583871812),
			nsec: (int32)(0),
			loc: (*time.Location)(&time.Location{
				name:       (string)("UTC"),
				zone:       ([]time.zone)(nil),
				tx:         ([]time.zoneTrans)(nil),
				cacheStart: (int64)(0),
				cacheEnd:   (int64)(0),
				cacheZone:  (*time.zone)(nil),
			}),
		}),
		URL: (*string)(&"https://api.github.com/notifications/threads/58373510"),
	}),
})
err = (interface{})(nil)

t = (*github.Notification)(&github.Notification{
	ID: (*string)(&"111741022"),
	Repository: (*github.Repository)(&github.Repository{
		ID: (*int)(&10151943),
		Owner: (*github.User)(&github.User{
			Login:             (*string)(&"go-gl"),
			ID:                (*int)(&2505184),
			AvatarURL:         (*string)(&"https://avatars.githubusercontent.com/u/2505184?v=3"),
			HTMLURL:           (*string)(&"https://github.com/go-gl"),
			GravatarID:        (*string)(&""),
			Name:              (*string)(nil),
			Company:           (*string)(nil),
			Blog:              (*string)(nil),
			Location:          (*string)(nil),
			Email:             (*string)(nil),
			Hireable:          (*bool)(nil),
			Bio:               (*string)(nil),
			PublicRepos:       (*int)(nil),
			PublicGists:       (*int)(nil),
			Followers:         (*int)(nil),
			Following:         (*int)(nil),
			CreatedAt:         (*github.Timestamp)(nil),
			UpdatedAt:         (*github.Timestamp)(nil),
			Type:              (*string)(&"Organization"),
			SiteAdmin:         (*bool)(&false),
			TotalPrivateRepos: (*int)(nil),
			OwnedPrivateRepos: (*int)(nil),
			PrivateGists:      (*int)(nil),
			DiskUsage:         (*int)(nil),
			Collaborators:     (*int)(nil),
			Plan:              (*github.Plan)(nil),
			URL:               (*string)(&"https://api.github.com/users/go-gl"),
			EventsURL:         (*string)(&"https://api.github.com/users/go-gl/events{/privacy}"),
			FollowingURL:      (*string)(&"https://api.github.com/users/go-gl/following{/other_user}"),
			FollowersURL:      (*string)(&"https://api.github.com/users/go-gl/followers"),
			GistsURL:          (*string)(&"https://api.github.com/users/go-gl/gists{/gist_id}"),
			OrganizationsURL:  (*string)(&"https://api.github.com/users/go-gl/orgs"),
			ReceivedEventsURL: (*string)(&"https://api.github.com/users/go-gl/received_events"),
			ReposURL:          (*string)(&"https://api.github.com/users/go-gl/repos"),
			StarredURL:        (*string)(&"https://api.github.com/users/go-gl/starred{/owner}{/repo}"),
			SubscriptionsURL:  (*string)(&"https://api.github.com/users/go-gl/subscriptions"),
			TextMatches:       ([]github.TextMatch)(nil),
			Permissions:       (*map[string]bool)(nil),
		}),
		Name:             (*string)(&"glfw"),
		FullName:         (*string)(&"go-gl/glfw"),
		Description:      (*string)(&"Go bindings for GLFW 3"),
		Homepage:         (*string)(nil),
		DefaultBranch:    (*string)(nil),
		MasterBranch:     (*string)(nil),
		CreatedAt:        (*github.Timestamp)(nil),
		PushedAt:         (*github.Timestamp)(nil),
		UpdatedAt:        (*github.Timestamp)(nil),
		HTMLURL:          (*string)(&"https://github.com/go-gl/glfw"),
		CloneURL:         (*string)(nil),
		GitURL:           (*string)(nil),
		MirrorURL:        (*string)(nil),
		SSHURL:           (*string)(nil),
		SVNURL:           (*string)(nil),
		Language:         (*string)(nil),
		Fork:             (*bool)(&false),
		ForksCount:       (*int)(nil),
		NetworkCount:     (*int)(nil),
		OpenIssuesCount:  (*int)(nil),
		StargazersCount:  (*int)(nil),
		SubscribersCount: (*int)(nil),
		WatchersCount:    (*int)(nil),
		Size:             (*int)(nil),
		AutoInit:         (*bool)(nil),
		Parent:           (*github.Repository)(nil),
		Source:           (*github.Repository)(nil),
		Organization:     (*github.Organization)(nil),
		Permissions:      (*map[string]bool)(nil),
		License:          (*github.License)(nil),
		Private:          (*bool)(&false),
		HasIssues:        (*bool)(nil),
		HasWiki:          (*bool)(nil),
		HasDownloads:     (*bool)(nil),
		TeamID:           (*int)(nil),
		URL:              (*string)(&"https://api.github.com/repos/go-gl/glfw"),
		ArchiveURL:       (*string)(&"https://api.github.com/repos/go-gl/glfw/{archive_format}{/ref}"),
		AssigneesURL:     (*string)(&"https://api.github.com/repos/go-gl/glfw/assignees{/user}"),
		BlobsURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/git/blobs{/sha}"),
		BranchesURL:      (*string)(&"https://api.github.com/repos/go-gl/glfw/branches{/branch}"),
		CollaboratorsURL: (*string)(&"https://api.github.com/repos/go-gl/glfw/collaborators{/collaborator}"),
		CommentsURL:      (*string)(&"https://api.github.com/repos/go-gl/glfw/comments{/number}"),
		CommitsURL:       (*string)(&"https://api.github.com/repos/go-gl/glfw/commits{/sha}"),
		CompareURL:       (*string)(&"https://api.github.com/repos/go-gl/glfw/compare/{base}...{head}"),
		ContentsURL:      (*string)(&"https://api.github.com/repos/go-gl/glfw/contents/{+path}"),
		ContributorsURL:  (*string)(&"https://api.github.com/repos/go-gl/glfw/contributors"),
		DownloadsURL:     (*string)(&"https://api.github.com/repos/go-gl/glfw/downloads"),
		EventsURL:        (*string)(&"https://api.github.com/repos/go-gl/glfw/events"),
		ForksURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/forks"),
		GitCommitsURL:    (*string)(&"https://api.github.com/repos/go-gl/glfw/git/commits{/sha}"),
		GitRefsURL:       (*string)(&"https://api.github.com/repos/go-gl/glfw/git/refs{/sha}"),
		GitTagsURL:       (*string)(&"https://api.github.com/repos/go-gl/glfw/git/tags{/sha}"),
		HooksURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/hooks"),
		IssueCommentURL:  (*string)(&"https://api.github.com/repos/go-gl/glfw/issues/comments{/number}"),
		IssueEventsURL:   (*string)(&"https://api.github.com/repos/go-gl/glfw/issues/events{/number}"),
		IssuesURL:        (*string)(&"https://api.github.com/repos/go-gl/glfw/issues{/number}"),
		KeysURL:          (*string)(&"https://api.github.com/repos/go-gl/glfw/keys{/key_id}"),
		LabelsURL:        (*string)(&"https://api.github.com/repos/go-gl/glfw/labels{/name}"),
		LanguagesURL:     (*string)(&"https://api.github.com/repos/go-gl/glfw/languages"),
		MergesURL:        (*string)(&"https://api.github.com/repos/go-gl/glfw/merges"),
		MilestonesURL:    (*string)(&"https://api.github.com/repos/go-gl/glfw/milestones{/number}"),
		NotificationsURL: (*string)(&"https://api.github.com/repos/go-gl/glfw/notifications{?since,all,participating}"),
		PullsURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/pulls{/number}"),
		ReleasesURL:      (*string)(&"https://api.github.com/repos/go-gl/glfw/releases{/id}"),
		StargazersURL:    (*string)(&"https://api.github.com/repos/go-gl/glfw/stargazers"),
		StatusesURL:      (*string)(&"https://api.github.com/repos/go-gl/glfw/statuses/{sha}"),
		SubscribersURL:   (*string)(&"https://api.github.com/repos/go-gl/glfw/subscribers"),
		SubscriptionURL:  (*string)(&"https://api.github.com/repos/go-gl/glfw/subscription"),
		TagsURL:          (*string)(&"https://api.github.com/repos/go-gl/glfw/tags"),
		TreesURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/git/trees{/sha}"),
		TeamsURL:         (*string)(&"https://api.github.com/repos/go-gl/glfw/teams"),
		TextMatches:      ([]github.TextMatch)(nil),
	}),
	Subject: (*github.NotificationSubject)(&github.NotificationSubject{
		Title:            (*string)(&"Are there plans for 64-bit support"),
		URL:              (*string)(&"https://api.github.com/repos/go-gl/glfw/issues/152"),
		LatestCommentURL: (*string)(&"https://api.github.com/repos/go-gl/glfw/issues/comments/160223641"),
		Type:             (*string)(&"Issue"),
	}),
	Reason: (*string)(&"comment"),
	Unread: (*bool)(&true),
	UpdatedAt: (*time.Time)(&time.Time{
		sec:  (int64)(63584261191),
		nsec: (int32)(0),
		loc: (*time.Location)(&time.Location{
			name:       (string)("UTC"),
			zone:       ([]time.zone)(nil),
			tx:         ([]time.zoneTrans)(nil),
			cacheStart: (int64)(0),
			cacheEnd:   (int64)(0),
			cacheZone:  (*time.zone)(nil),
		}),
	}),
	LastReadAt: (*time.Time)(nil),
	URL:        (*string)(&"https://api.github.com/notifications/threads/111741022"),
})
err = (interface{})(nil)
`
